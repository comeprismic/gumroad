// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Blogpost documents */
interface BlogpostDocumentData {
    /**
     * Title field in *Blogpost*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blogpost.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * Slice Zone field in *Blogpost*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: blogpost.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<BlogpostDocumentDataSlicesSlice>;
}
/**
 * Slice for *Blogpost → Slice Zone*
 *
 */
type BlogpostDocumentDataSlicesSlice = CtaSliceSlice | ImageLeftAndTextSlice | TestNewScreenshotsSlice;
/**
 * Blogpost document from Prismic
 *
 * - **API ID**: `blogpost`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogpostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<BlogpostDocumentData>, "blogpost", Lang>;
/** Content for Footer documents */
interface FooterDocumentData {
    /**
     * menu items field in *Footer*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.menu_items[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    menu_items: prismicT.GroupField<Simplify<FooterDocumentDataMenuItemsItem>>;
}
/**
 * Item in Footer → menu items
 *
 */
export interface FooterDocumentDataMenuItemsItem {
    /**
     * menu item label field in *Footer → menu items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.menu_items[].menu_item_label
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    menu_item_label: prismicT.KeyTextField;
    /**
     * menu link field in *Footer → menu items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.menu_items[].menu_link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    menu_link: prismicT.LinkField;
}
/**
 * Footer document from Prismic
 *
 * - **API ID**: `footer`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FooterDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<FooterDocumentData>, "footer", Lang>;
/** Content for Header documents */
interface HeaderDocumentData {
    /**
     * menu items field in *Header*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: header.menu_items[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    menu_items: prismicT.GroupField<Simplify<HeaderDocumentDataMenuItemsItem>>;
}
/**
 * Item in Header → menu items
 *
 */
export interface HeaderDocumentDataMenuItemsItem {
    /**
     * menu item label field in *Header → menu items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: header.menu_items[].menu_item_label
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    menu_item_label: prismicT.KeyTextField;
    /**
     * menu link field in *Header → menu items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: header.menu_items[].menu_link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    menu_link: prismicT.LinkField;
}
/**
 * Header document from Prismic
 *
 * - **API ID**: `header`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HeaderDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HeaderDocumentData>, "header", Lang>;
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * Title field in *Homepage*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * Slice Zone field in *Homepage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomepageDocumentDataSlicesSlice>;
    /**
     * SEO Title field in *Homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.seo_title
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    seo_title: prismicT.KeyTextField;
    /**
     * SEO Description field in *Homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.seo_description
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    seo_description: prismicT.KeyTextField;
}
/**
 * Slice for *Homepage → Slice Zone*
 *
 */
type HomepageDocumentDataSlicesSlice = CtaSliceSlice | ImageLeftAndTextSlice | HeroSlice;
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = HeroSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<PageDocumentData>, "page", Lang>;
/** Content for Product documents */
interface ProductDocumentData {
    /**
     * Slice Zone field in *Product*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: product.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<ProductDocumentDataSlicesSlice>;
}
/**
 * Slice for *Product → Slice Zone*
 *
 */
type ProductDocumentDataSlicesSlice = ImageLeftAndTextSlice;
/**
 * Product document from Prismic
 *
 * - **API ID**: `product`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProductDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<ProductDocumentData>, "product", Lang>;
export type AllDocumentTypes = BlogpostDocument | FooterDocument | HeaderDocument | HomepageDocument | PageDocument | ProductDocument;
/**
 * Primary content in CtaSlice → Primary
 *
 */
interface CtaSliceSliceDefaultPrimary {
    /**
     * Title field in *CtaSlice → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: cta_slice.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *CtaSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: cta_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Link field in *CtaSlice → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: cta_slice.primary.link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
    /**
     * LinkLabel field in *CtaSlice → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: cta_slice.primary.linklabel
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    linklabel: prismicT.KeyTextField;
}
/**
 * Default variation for CtaSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `CtaSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CtaSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<CtaSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *CtaSlice*
 *
 */
type CtaSliceSliceVariation = CtaSliceSliceDefault;
/**
 * CtaSlice Shared Slice
 *
 * - **API ID**: `cta_slice`
 * - **Description**: `CtaSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CtaSliceSlice = prismicT.SharedSlice<"cta_slice", CtaSliceSliceVariation>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceDefaultPrimary {
    /**
     * Title field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: hero.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Hero → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: hero.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Hero*
 *
 */
type HeroSliceVariation = HeroSliceDefault;
/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSlice = prismicT.SharedSlice<"hero", HeroSliceVariation>;
/**
 * Primary content in ImageLeftAndText → Primary
 *
 */
interface ImageLeftAndTextSliceDefaultPrimary {
    /**
     * Title field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: image_left_and_text.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * Description field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: image_left_and_text.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_left_and_text.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Default variation for ImageLeftAndText Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ImageLeftAndText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftAndTextSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ImageLeftAndTextSliceDefaultPrimary>, never>;
/**
 * Primary content in ImageLeftAndText → Primary
 *
 */
interface ImageLeftAndTextSliceImageRightAndTextPrimary {
    /**
     * Title field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: image_left_and_text.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: image_left_and_text.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_left_and_text.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * ImageRightAndText variation for ImageLeftAndText Slice
 *
 * - **API ID**: `imageRightAndText`
 * - **Description**: `ImageLeftAndText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftAndTextSliceImageRightAndText = prismicT.SharedSliceVariation<"imageRightAndText", Simplify<ImageLeftAndTextSliceImageRightAndTextPrimary>, never>;
/**
 * Primary content in ImageLeftAndText → Primary
 *
 */
interface ImageLeftAndTextSliceNoImagePrimary {
    /**
     * Title field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: image_left_and_text.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: image_left_and_text.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *ImageLeftAndText → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_left_and_text.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * No Image variation for ImageLeftAndText Slice
 *
 * - **API ID**: `noImage`
 * - **Description**: `ImageLeftAndText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftAndTextSliceNoImage = prismicT.SharedSliceVariation<"noImage", Simplify<ImageLeftAndTextSliceNoImagePrimary>, never>;
/**
 * Slice variation for *ImageLeftAndText*
 *
 */
type ImageLeftAndTextSliceVariation = ImageLeftAndTextSliceDefault | ImageLeftAndTextSliceImageRightAndText | ImageLeftAndTextSliceNoImage;
/**
 * ImageLeftAndText Shared Slice
 *
 * - **API ID**: `image_left_and_text`
 * - **Description**: `ImageLeftAndText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftAndTextSlice = prismicT.SharedSlice<"image_left_and_text", ImageLeftAndTextSliceVariation>;
/**
 * Primary content in New → Primary
 *
 */
interface NewSliceDefaultPrimary {
    /**
     * Title field in *New → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: new.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *New → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: new.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for New Slice
 *
 * - **API ID**: `default`
 * - **Description**: `New`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type NewSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<NewSliceDefaultPrimary>, never>;
/**
 * Slice variation for *New*
 *
 */
type NewSliceVariation = NewSliceDefault;
/**
 * New Shared Slice
 *
 * - **API ID**: `new`
 * - **Description**: `New`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type NewSlice = prismicT.SharedSlice<"new", NewSliceVariation>;
/**
 * Primary content in TestNewScreenshots → Primary
 *
 */
interface TestNewScreenshotsSliceDefaultPrimary {
    /**
     * Title field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: test_new_screenshots.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: test_new_screenshots.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for TestNewScreenshots Slice
 *
 * - **API ID**: `default`
 * - **Description**: `TestNewScreenshots`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestNewScreenshotsSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<TestNewScreenshotsSliceDefaultPrimary>, never>;
/**
 * Primary content in TestNewScreenshots → Primary
 *
 */
interface TestNewScreenshotsSliceImageLeftPrimary {
    /**
     * Title field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: test_new_screenshots.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: test_new_screenshots.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Image left variation for TestNewScreenshots Slice
 *
 * - **API ID**: `imageLeft`
 * - **Description**: `TestNewScreenshots`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestNewScreenshotsSliceImageLeft = prismicT.SharedSliceVariation<"imageLeft", Simplify<TestNewScreenshotsSliceImageLeftPrimary>, never>;
/**
 * Primary content in TestNewScreenshots → Primary
 *
 */
interface TestNewScreenshotsSliceImageTopPrimary {
    /**
     * Title field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: test_new_screenshots.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: test_new_screenshots.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Image Top variation for TestNewScreenshots Slice
 *
 * - **API ID**: `imageTop`
 * - **Description**: `TestNewScreenshots`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestNewScreenshotsSliceImageTop = prismicT.SharedSliceVariation<"imageTop", Simplify<TestNewScreenshotsSliceImageTopPrimary>, never>;
/**
 * Primary content in TestNewScreenshots → Primary
 *
 */
interface TestNewScreenshotsSliceNewVariationPrimary {
    /**
     * Title field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: test_new_screenshots.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *TestNewScreenshots → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: test_new_screenshots.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * new variation variation for TestNewScreenshots Slice
 *
 * - **API ID**: `newVariation`
 * - **Description**: `TestNewScreenshots`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestNewScreenshotsSliceNewVariation = prismicT.SharedSliceVariation<"newVariation", Simplify<TestNewScreenshotsSliceNewVariationPrimary>, never>;
/**
 * Slice variation for *TestNewScreenshots*
 *
 */
type TestNewScreenshotsSliceVariation = TestNewScreenshotsSliceDefault | TestNewScreenshotsSliceImageLeft | TestNewScreenshotsSliceImageTop | TestNewScreenshotsSliceNewVariation;
/**
 * TestNewScreenshots Shared Slice
 *
 * - **API ID**: `test_new_screenshots`
 * - **Description**: `TestNewScreenshots`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestNewScreenshotsSlice = prismicT.SharedSlice<"test_new_screenshots", TestNewScreenshotsSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { BlogpostDocumentData, BlogpostDocumentDataSlicesSlice, BlogpostDocument, FooterDocumentData, FooterDocumentDataMenuItemsItem, FooterDocument, HeaderDocumentData, HeaderDocumentDataMenuItemsItem, HeaderDocument, HomepageDocumentData, HomepageDocumentDataSlicesSlice, HomepageDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, ProductDocumentData, ProductDocumentDataSlicesSlice, ProductDocument, AllDocumentTypes, CtaSliceSliceDefaultPrimary, CtaSliceSliceDefault, CtaSliceSliceVariation, CtaSliceSlice, HeroSliceDefaultPrimary, HeroSliceDefault, HeroSliceVariation, HeroSlice, ImageLeftAndTextSliceDefaultPrimary, ImageLeftAndTextSliceDefault, ImageLeftAndTextSliceImageRightAndTextPrimary, ImageLeftAndTextSliceImageRightAndText, ImageLeftAndTextSliceNoImagePrimary, ImageLeftAndTextSliceNoImage, ImageLeftAndTextSliceVariation, ImageLeftAndTextSlice, NewSliceDefaultPrimary, NewSliceDefault, NewSliceVariation, NewSlice, TestNewScreenshotsSliceDefaultPrimary, TestNewScreenshotsSliceDefault, TestNewScreenshotsSliceImageLeftPrimary, TestNewScreenshotsSliceImageLeft, TestNewScreenshotsSliceImageTopPrimary, TestNewScreenshotsSliceImageTop, TestNewScreenshotsSliceNewVariationPrimary, TestNewScreenshotsSliceNewVariation, TestNewScreenshotsSliceVariation, TestNewScreenshotsSlice };
    }
}
